services:
  app:
    build:
      context: ./back
      dockerfile: DockerFile
      args:
        NODE_ENV: ${NODE_ENV}
    container_name: ${PROJECT_NAME}-app-${ENV_NAME}
    environment:
      SERVICE_NAME: app
      DB_HOST: ${MYSQL_DB_HOST}
      DB_NAME: ${MYSQL_DB_NAME}
      DB_USER: ${MYSQL_DB_USER}
      DB_PWD: ${MYSQL_DB_PWD}
      START_METHOD: ${START_METHOD}
    ports:
      - '${APP_HOST_PORT}:${APP_CONTAINER_PORT}'
    networks:
      - mon-projet-network
    depends_on:
      - mysql

  mysql:
    image: mysql:8.0
    container_name: ${MYSQL_DB_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_PWD}
      MYSQL_DATABASE: ${MYSQL_DB_NAME}
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PWD}
    ports:
      - '${MYSQL_DB_HOST_PORT}:${MYSQL_DB_CONTAINER_PORT}'
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - mon-projet-network
  
  adminer:
    image: adminer
    container_name: adminer_container
    ports:
      - "8081:8080" 

networks:
  mon-projet-network:
    driver: bridge

volumes:
  mysql-data:
